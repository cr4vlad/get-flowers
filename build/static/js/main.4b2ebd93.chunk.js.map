{"version":3,"sources":["assets/getflowers.svg","components/ProductCard/index.js","components/ProductCard/ProductCard.jsx","components/LandingCategory/index.js","components/LandingCategory/LandingCategory.jsx","containers/LandingCategoryContainer.jsx","components/LandingPage/index.js","components/LandingPage/LandingPage.jsx","pages/Landing.jsx","components/CategoryPage/index.js","components/CategoryPage/CategoryPage.jsx","pages/Category.jsx","routes.js","components/Navbar/index.js","components/Navbar/Navbar.jsx","containers/NavbarContainer.jsx","components/Footer/index.js","components/Footer/Footer.jsx","containers/FooterContainer.jsx","ScrollToTop.js","App.jsx","serviceWorker.js","store/reducer.js","store/actionTypes.js","store/actions.js","index.js"],"names":["module","exports","ProductCard","props","product","className","alt","title","src","logo","price","LandingCategory","category","products","to","id","slice","map","key","console","log","connect","state","ownProps","data","categories","filter","LandingPage","CategoryPage","match","params","categoryId","Helmet","name","content","BaseRouter","exact","path","component","Landing","Category","Navbar","role","Footer","href","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","App","Component","Boolean","location","hostname","initialState","deliveryInfo","getProducts","action","setDeliveryInfo","reducer","type","URL","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","dispatch","axios","get","then","res","results","arr","Object","fromEntries","updateProducts","catch","error","response","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4b2ebd93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/getflowers.c696a5b9.svg\";","import ProductCard from './ProductCard'\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport './ProductCard.css'\r\n\r\nexport default function ProductCard (props) {\r\n  const { product } = props\r\n\r\n  if (!product) {\r\n    return (\r\n      <p className='loading'>Loading product...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='img-block'>\r\n        <img alt={product.title} src={product.logo} />\r\n      </div>\r\n\r\n      <h3 className='title'>{product.title}</h3>\r\n\r\n      <div className='price-line'>\r\n        <p> {product.price} грн</p>\r\n        <button className='order'>Заказать</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import LandingCategory from './LandingCategory'\r\nexport default LandingCategory\n","import React from 'react'\r\nimport ProductCard from '../ProductCard'\r\nimport { Link } from 'react-router-dom'\r\nimport './LandingCategory.css'\r\n\r\nexport default function LandingCategory (props) {\r\n  const { category, products } = props\r\n\r\n  if (!category || !products) {\r\n    console.log('LandingCategory props.category:', category)\r\n    console.log('LandingCategory props.products:', products)\r\n\r\n    return (\r\n      <p className='loading'>Loading category...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/category/${category.id}`}>\r\n        <h2 className='landing'>{category.title}</h2>\r\n      </Link>\r\n\r\n      <div className='grid-container--landing'>\r\n        {products.slice(0, 3).map(product => (\r\n          <ProductCard key={product.title} product={product} />\r\n        ))}\r\n      </div>\r\n\r\n      <Link to={`/category/${category.id}`}>\r\n        <p className='category-link'>\r\n          {category.title}\r\n        </p>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LandingCategory from '../components/LandingCategory'\r\n\r\nfunction LandingCategoryContainer (props) {\r\n  return (\r\n    <LandingCategory category={props.category[0]} products={props.products} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    category: state.data.categories.filter(category => {\r\n      return category.id === ownProps.id\r\n    }),\r\n    products: state.data.products[ownProps.id]\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(LandingCategoryContainer)\n","import LandingPage from './LandingPage'\r\nexport default LandingPage\n","import React from 'react'\r\nimport LandingCategoryContainer from '../../containers/LandingCategoryContainer'\r\nimport './LandingPage.css'\r\n\r\nexport default function LandingPage (props) {\r\n  const { categories } = props\r\n\r\n  if (!categories) {\r\n    return (\r\n      <p className='loading'>Loading categories...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='hero-image'>\r\n        <div className='hero-content-wrapper'>\r\n          <p className='hero-content'>\r\n            Свежие цветы<br />\r\n            Круглосуточная доставка\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <article>\r\n        {categories.map(category => (\r\n          <LandingCategoryContainer key={category.id} id={category.id} />\r\n        ))}\r\n      </article>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LandingPage from '../components/LandingPage'\r\n\r\nfunction Landing (props) {\r\n  if (!props.categories) {\r\n    return (\r\n      <p>Loading...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <LandingPage categories={props.categories} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.data.categories\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Landing)\r\n","import CategoryPage from './CategoryPage'\r\nexport default CategoryPage\n","import React from 'react'\r\nimport ProductCard from '../ProductCard'\r\nimport './CategoryPage.css'\r\n\r\nexport default function CategoryPage (props) {\r\n  const { title, products } = props\r\n\r\n  if (!title || !products) {\r\n    console.log('props.title:', title)\r\n    console.log('props.products:', products)\r\n    return (\r\n      <p className='loading'>Loading category...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='hero-image' />\r\n\r\n      <article>\r\n        <h2 className='category'>{title}</h2>\r\n\r\n        <div className='grid-container--category'>\r\n          {products.map(product => (\r\n            <ProductCard key={product.title} product={product} />\r\n          ))}\r\n        </div>\r\n      </article>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { connect } from 'react-redux'\r\nimport CategoryPage from '../components/CategoryPage'\r\n\r\nfunction Category (props) {\r\n  if (props.category[0] && props.category[0].title && props.products) {\r\n    const title = props.category[0].title\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>{`${title} | Get Flowers`}</title>\r\n          <meta name='description' content={title} />\r\n        </Helmet>\r\n\r\n        <CategoryPage title={title} products={props.products} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  console.log('props.category[0]:', props.category[0])\r\n  console.log('props.products:', props.products)\r\n  return (\r\n    <>\r\n      <Helmet title='Loading category... | Get Flowers' />\r\n\r\n      <p className='loading'>Loading category...</p>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    products: state.data.products[ownProps.match.params.categoryId],\r\n    category: state.data.categories.filter(category => {\r\n      return category.id === ownProps.match.params.categoryId\r\n    })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Category)\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport Landing from './pages/Landing'\r\nimport Category from './pages/Category'\r\n\r\nfunction BaseRouter () {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={Landing} />\r\n      <Route exact path='/category/:categoryId' component={Category} />\r\n      <Route>404 Page not found</Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default BaseRouter\r\n","import Navbar from './Navbar'\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './Navbar.css'\r\nimport logo from '../../assets/getflowers.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar (props) {\r\n  if (!props.categories) {\r\n    return (\r\n      <p>Loading categories...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <header role='banner'>\r\n      <div className='wrapper'>\r\n        <div className='nav--desktop'>\r\n          <h1>\r\n            <Link to='/'>\r\n              <img src={logo} alt='GetFlowers' className='title' />\r\n            </Link>\r\n          </h1>\r\n\r\n          <div className='menu'>\r\n            {props.categories.map(category => (\r\n              <div key={category.id} className='category'>\r\n                <Link to={`/category/${category.id}`} className='link'>\r\n                  {category.title}\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../components/Navbar'\r\n\r\nfunction NavbarContainer (props) {\r\n  if (!props.categories) {\r\n    console.log('NavbarContainer props.categories:', props.categories)\r\n\r\n    return (\r\n      <p>Loading categories...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar categories={props.categories} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.data.categories\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(NavbarContainer)\n","import Footer from './Footer'\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Footer.css'\r\n\r\nexport default function Footer (props) {\r\n  return (\r\n    <footer>\r\n      <div className='wrapper'>\r\n        <div className='block'>\r\n          <div className='title'>\r\n            Разделы Сайта\r\n          </div>\r\n          <hr />\r\n          <>\r\n            <Link to='/' className='link'>\r\n              Главная\r\n            </Link>\r\n            {props.categories && props.categories.map(category => (\r\n              <Link key={category.id} to={`/category/${category.id}`} className='link'>\r\n                {category.title}\r\n              </Link>\r\n            ))}\r\n          </>\r\n        </div>\r\n\r\n        <div className='block'>\r\n          <div className='title'>\r\n            О Нас\r\n          </div>\r\n          <hr />\r\n          <div className='title'>\r\n            <p>Дарить цветы - это красиво, а дарить цветы, которые нравятся всем - это гарантировано поднять настроение получателю! Поэтому решив подарить букет красивых цветов - закажите их у нас!</p>\r\n            <p>Мы доставляем цветы по всей Украине, а в Киеве находится наш крупный цветочный магазин. Наша курьерская служба доставки цветов в Киеве GetFlowers с удовольствием и в срок выполнит адресную доставку цветов в нужный район города всего за 2 часа!</p>\r\n            <Link to='/' className='link copyright'>\r\n              © Copyright GetFlowers 2020\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='block'>\r\n          <div className='title'>\r\n            Контакты\r\n          </div>\r\n          <hr />\r\n          <>\r\n            <p className='line'>Электронная почта: <a href='mailto:2getflowers@gmail.com' className='email'>2getflowers@gmail.com</a></p>\r\n            <p className='line'>Телефон: +380667778899</p>\r\n          </>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Footer from '../components/Footer'\r\n\r\nfunction FooterContainer (props) {\r\n  if (!props.categories) {\r\n    console.log('FooterContainer props.categories:', props.categories)\r\n\r\n    return (\r\n      <p>Loading footer...</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Footer categories={props.categories} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.data.categories\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(FooterContainer)\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function ScrollToTop () {\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return null\r\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport BaseRouter from './routes'\nimport NavbarContainer from './containers/NavbarContainer'\nimport FooterContainer from './containers/FooterContainer'\nimport ScrollToTop from './ScrollToTop'\n\nexport default class App extends Component {\n  render () {\n    return (\n      <Router>\n        <ScrollToTop />\n        <NavbarContainer />\n        <BaseRouter />\n        <FooterContainer />\n      </Router>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import * as actionTypes from './actionTypes'\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: {},\r\n  deliveryInfo: {}\r\n}\r\n\r\nconst getProducts = (state, action) => {\r\n  return {\r\n    ...state,\r\n    products: action.products,\r\n    categories: action.categories\r\n  }\r\n}\r\n\r\nconst setDeliveryInfo = (state, action) => {\r\n  return {\r\n    ...state,\r\n    deliveryInfo: action.deliveryInfo\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS:\r\n      return getProducts(state, action)\r\n    case actionTypes.SET_DELIVERY_INFO:\r\n      return setDeliveryInfo(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const GET_PRODUCTS = 'GET_PRODUCTS'\r\nexport const SET_DELIVERY_INFO = 'SET_DELIVERY_INFO'\n","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nconst URL = 'http://localhost:8000/api'\r\n\r\nexport const updateProducts = (categories, products) => {\r\n  return {\r\n    type: actionTypes.GET_PRODUCTS,\r\n    categories: categories,\r\n    products: products\r\n  }\r\n}\r\n\r\nexport const updateDeliveryInfo = deliveryInfo => {\r\n  return {\r\n    type: actionTypes.SET_DELIVERY_INFO,\r\n    deliveryInfo: deliveryInfo\r\n  }\r\n}\r\n\r\nexport const fetchProducts = () => {\r\n  return dispatch => {\r\n    console.log('fetchProducts start')\r\n    axios.get(`${URL}/categories/`).then(res => {\r\n      const categories = res.data.results\r\n\r\n      axios.get(`${URL}/products/`).then(res => {\n        const arr = categories.map(category => {\r\n          return [category.id,\r\n            res.data.results.filter(product => {\r\n              return product.category === category.id\r\n            })\r\n          ]\r\n        })\r\n\r\n        const products = Object.fromEntries(arr) // {cId: [products], ...}\r\n\r\n        console.log('categories dispatching to redux state:', categories)\r\n        console.log('products dispatching to redux state:', products)\r\n        dispatch(updateProducts(categories, products))\n      }).catch(error => {\r\n        console.log('fetchProducts error while getting products, status', error.response)\r\n      })\r\n    }).catch(error => {\r\n      console.log('fetchProducts error while getting categories, status', error.response)\r\n    })\r\n  }\r\n}\r\n\r\nexport const addOrder = order => {\r\n  return dispatch => {\r\n    axios.post(`${URL}/orders/`, order).then(res => {\r\n      console.log('Added order:', order)\r\n      console.log('Result:', res)\r\n      const deliveryInfo = {}\r\n      for (var i in order) {\r\n        if (i !== 'product') {\r\n          deliveryInfo[i] = order[i]\r\n        }\r\n      }\r\n      dispatch(updateDeliveryInfo(deliveryInfo))\r\n    }).catch(error => {\r\n      console.log('addOrder error, status', error.response)\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducer from './store/reducer'\nimport { fetchProducts } from './store/actions'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst rootReducer = combineReducers({\n  data: reducer\n})\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)))\n\nstore.dispatch(fetchProducts())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}